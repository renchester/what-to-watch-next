@use 'sass:math';

/// Works with pixel units
@function fluid-font(
  $min-width,
  $max-width,
  $font-size-at-min-width,
  $font-size-at-max-width
) {
  $slope: math.div(
    ($font-size-at-max-width - $font-size-at-min-width),
    ($max-width - $min-width)
  );
  $y-axis-intersection: -1 * $min-width * $slope + $font-size-at-min-width;
  $return-value: clamp(
    #{$font-size-at-min-width},
    #{$y-axis-intersection} + #{$slope} * 100vw,
    #{$font-size-at-max-width}
  );
  @return $return-value;
}

/* MEDIA QUERY MIXIN*/

$breakpoints: (
  xxs: 250px,
  xs: 400px,
  sm: 600px,
  md: 700px,
  lg: 900px,
  xl: 1000px,
  xxl: 1200px,
);

@mixin breakpoint($key, $minmax: max) {
  $size: map-get($breakpoints, $key);

  @if ($size) {
    @media only screen and (#{$minmax}-width: $size) {
      @content;
    }
  } @else {
    @error '`#{$key}` does not exist in the $breakpoints';
  }
}

@mixin breakpoint-exact($size, $minmax: max) {
  @if ($size) {
    @media only screen and (#{$minmax}-width: $size) {
      @content;
    }
  } @else {
    @error '`#{$key}` does not exist in the $breakpoints';
  }
}

@mixin center-self($position, $relOrAbs: relative) {
  position: $relOrAbs;

  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  } @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

/* PLACEHOLDERS */

%parent-with-centered-children {
  display: flex;
  justify-content: center;
  align-items: center;
}

%text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

%cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

%empty-title {
  display: block;
  padding-inline: 10px;
  max-width: 800px;
  margin-inline: auto;
  margin-top: 50px;
  margin-bottom: 18px;
  font-size: var(--text-lg);
  font-family: var(--font-gotham-bold);
  text-align: center;
}

%empty-subtitle {
  font-size: var(--text-md);
  text-align: center;
}

%empty-button {
  @include center-self(horizontal);
  margin-top: 30px;
  padding: 15px 20px;
  background: var(--color-accent-3);
  border-radius: 6px;
  cursor: pointer;

  font-family: var(--font-gotham-bold);
  font-size: var(--text-xs);
  text-transform: uppercase;

  &:hover,
  &:focus {
    background: var(--color-primary);
    color: var(--color-light-1);
    text-decoration: underline;
    text-underline-offset: 5px;
  }
}
